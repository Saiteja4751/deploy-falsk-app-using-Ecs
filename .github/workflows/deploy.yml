name: Terraform ECS Deployment

on:
  push:
    branches: [main]

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Terraform Init
      run: terraform -chdir=terraform init

    - name: Terraform Plan
      run: terraform -chdir=terraform plan

    - name: Terraform Apply
      run: terraform -chdir=terraform apply -auto-approve

    - name: Get ECR Repo URI
      id: get-ecr
      run: |
        REPO_URI=$(aws ecr describe-repositories --repository-names flask-ecr --query "repositories[0].repositoryUri" --output text)
        echo "REPO_URI=$REPO_URI" >> $GITHUB_ENV

    - name: Build and Push Docker Image
      run: |
        docker build -t $REPO_URI:latest .
        aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $REPO_URI
        docker push $REPO_URI:latest

    - name: Force ECS Service Redeploy
      run: |
        aws ecs update-service \
          --cluster flask-cluster \
          --service flask-service \
          --force-new-deployment
